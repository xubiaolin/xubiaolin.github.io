{
    "version": "https://jsonfeed.org/version/1",
    "title": "徐镖林的网络博客 • All posts by \"网络科技\" category",
    "description": "",
    "home_page_url": "https://xubiaolin.github.io",
    "items": [
        {
            "id": "https://xubiaolin.github.io/2025/04/11/wang-luo-ke-ji/hexo-ye-jiao-tian-jia-fang-ke-ren-shu-he-zong-fang-wen-liang/",
            "url": "https://xubiaolin.github.io/2025/04/11/wang-luo-ke-ji/hexo-ye-jiao-tian-jia-fang-ke-ren-shu-he-zong-fang-wen-liang/",
            "title": "hexo页脚添加访客人数和总访问量",
            "date_published": "2025-04-11T15:22:25.000Z",
            "content_html": "<h1 id=\"hexo页脚添加访客人数和总访问量\"><a href=\"#hexo页脚添加访客人数和总访问量\" class=\"headerlink\" title=\"hexo页脚添加访客人数和总访问量\"></a>hexo页脚添加访客人数和总访问量</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>我使用的是不蒜子计数，但是最近不蒜子计数挂了好几天，我想换一个方案，我了解到了 Vercount。</p>\n<blockquote>\n<p>GitHub 项目：<a href=\"https://github.com/EvanNotFound/vercount\">github.com/EvanNotFound/vercount</a></p>\n<p>项目官网：<a href=\"https://vercount.one/\">vercount.one</a></p>\n</blockquote>\n<p>Vercount 是一个完美的不蒜子计数替代方案，它的特点是：</p>\n<ul>\n<li>速度快，服务器响应时间在 10ms 以内</li>\n<li>使用 POST 请求进行统计，不再使用不蒜子的过时 Referrer 方法进行统计，实现移动端 / Firefox / Safari 等浏览器的准确统计。</li>\n<li>使用 Json 回调，不再使用不蒜子的 JSONP 回调方法，防止 CSRF 攻击，详情请看：JSONP</li>\n<li>初始化自动同步 (site_pv, site_uv, page_pv) 所有不蒜子的数据，无需手动操作</li>\n<li>自动保持和不蒜子的数据同步，每访问一次，数据就会自动同步</li>\n<li>兼容不蒜子的 span 标签，可以无缝切换</li>\n<li>使用 Upstash Redis 作为数据存储，数据不会丢失，保证 99.99% 可用性</li>\n<li>使用 Vercel Serverless Functions 作为后端，保证 99.99% 可用性</li>\n<li>使用 Vercel 全球 CDN 作为前端，保证 99.99% 可用性</li>\n</ul>\n<h2 id=\"从不蒜子切换到-Vercount\"><a href=\"#从不蒜子切换到-Vercount\" class=\"headerlink\" title=\"从不蒜子切换到 Vercount\"></a>从不蒜子切换到 Vercount</h2><p>访问：<a href=\"https://vercount.one/\">vercount.one</a> 查看具体的使用方法。</p>\n<p><strong>PS:</strong> Vercount实际上是兼容了不蒜子的，所以你如果之前使用不蒜子，可以无缝切换到 Vercount。也就是直接引入 Vercount 的脚本的就可以了，后面的步骤可以不看。</p>\n<h3 id=\"添加-Vercount-的脚本\"><a href=\"#添加-Vercount-的脚本\" class=\"headerlink\" title=\"添加 Vercount 的脚本\"></a>添加 Vercount 的脚本</h3><p>添加以下 HTML 代码：</p>\n<figure class=\"highlight html\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">defer</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://events.vercount.one/js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"添加-Vercount-的-ID\"><a href=\"#添加-Vercount-的-ID\" class=\"headerlink\" title=\"添加 Vercount 的 ID\"></a>添加 Vercount 的 ID</h3><p>使用以下 ID：</p>\n<figure class=\"highlight html\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">Total Page View <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"vercount_value_page_pv\"</span>&gt;</span>Loading<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">Total Visits <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"vercount_value_site_pv\"</span>&gt;</span>Loading<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">Site Total Visitors <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"vercount_value_site_uv\"</span>&gt;</span>Loading<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"刷新网页\"><a href=\"#刷新网页\" class=\"headerlink\" title=\"刷新网页\"></a>刷新网页</h3><p>刷新网页, 就可以开始计数了。</p>\n<h2 id=\"效果如下\"><a href=\"#效果如下\" class=\"headerlink\" title=\"效果如下\"></a>效果如下</h2><p><strong>页脚显示</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/ca7bda6bfe65359cec387db1b248826aa5b3abfb2073f519c3d8237d5caaacbf.png\" alt=\"页脚\"> </p>\n<p><strong>文章页显示</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/eddda1f2bb3553c68fefe001b43abb127d67520d05aa162e95524ab5b6ff32ca.png\" alt=\"文章页\">  </p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://vercount.one/\">Vercount</a></li>\n<li><a href=\"https://github.com/EvanNotFound/vercount\">github.com/EvanNotFound/vercount</a></li>\n</ul>\n",
            "tags": [
                "Hexo"
            ]
        },
        {
            "id": "https://xubiaolin.github.io/2025/04/11/wang-luo-ke-ji/hexo-deploy-github-pages-zi-ding-yi-yu-ming-diu-shi/",
            "url": "https://xubiaolin.github.io/2025/04/11/wang-luo-ke-ji/hexo-deploy-github-pages-zi-ding-yi-yu-ming-diu-shi/",
            "title": "hexo deploy github pages自定义域名丢失",
            "date_published": "2025-04-10T17:00:53.000Z",
            "content_html": "<h1 id=\"hexo-deploy-github-pages自定义域名丢失\"><a href=\"#hexo-deploy-github-pages自定义域名丢失\" class=\"headerlink\" title=\"hexo deploy github pages自定义域名丢失\"></a>hexo deploy github pages自定义域名丢失</h1><h2 id=\"1-问题描述\"><a href=\"#1-问题描述\" class=\"headerlink\" title=\"1. 问题描述\"></a>1. 问题描述</h2><p>在hexo deploy github pages后，发现自定义域名丢失了，无法访问。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/8e19e0873e2bbbc54afd53dd8405ea5b2b9d03420817865ca51303061c783be3.png\" alt=\"picture 0\">  </p>\n<h2 id=\"2-解决办法\"><a href=\"#2-解决办法\" class=\"headerlink\" title=\"2. 解决办法\"></a>2. 解决办法</h2><p>在hexo项目的source文件夹下新建CNAME文件，里面填入你的域名，并保存，这样每次hexo deploy后，github page就不会出现域名重置了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/6b87b11dafa2dc5b5da33dbb32d0ca7332f3e200b8ec9c17090d93797f3d4296.png\" alt=\"picture 1\">  </p>\n",
            "tags": [
                "Github",
                "Pages",
                "hexo"
            ]
        },
        {
            "id": "https://xubiaolin.github.io/2025/04/11/wang-luo-ke-ji/github-pages-shi-yong-zi-ding-yi-yu-ming/",
            "url": "https://xubiaolin.github.io/2025/04/11/wang-luo-ke-ji/github-pages-shi-yong-zi-ding-yi-yu-ming/",
            "title": "Github Pages 使用自定义域名",
            "date_published": "2025-04-10T16:44:41.000Z",
            "content_html": "<h1 id=\"Github-Pages-使用自定义域名\"><a href=\"#Github-Pages-使用自定义域名\" class=\"headerlink\" title=\"Github Pages 使用自定义域名\"></a>Github Pages 使用自定义域名</h1><h2 id=\"1-购买域名\"><a href=\"#1-购买域名\" class=\"headerlink\" title=\"1. 购买域名\"></a>1. 购买域名</h2><p>域名购买的主流网站主要有阿里云、腾讯云、Godaddy等，我在阿里云和Godaddy都买过域名，从购买体验上来讲，两者差别不大。</p>\n<p>我们以阿里云为例，在阿里云上购买域名后，需要进行实名认证，认证通过后，域名就可以正常使用了。</p>\n<h2 id=\"2-添加域名解析\"><a href=\"#2-添加域名解析\" class=\"headerlink\" title=\"2. 添加域名解析\"></a>2. 添加域名解析</h2><p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/43e80edea368d0cfedd6c016b0b52d90b25a855e5da02a369ff01e71dc51153f.png\" alt=\"picture 0\">  </p>\n<h2 id=\"3-配置Github-Pages-Custom-Domain\"><a href=\"#3-配置Github-Pages-Custom-Domain\" class=\"headerlink\" title=\"3. 配置Github Pages Custom Domain\"></a>3. 配置Github Pages Custom Domain</h2><p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/6542c3bf43091626d8b771a43d76b8a77ad931febc1cb3f3ac6c873633ff2aca.png\" alt=\"picture 1\">  </p>\n<h2 id=\"4-稍等片刻，刷新页面，即可看到效果\"><a href=\"#4-稍等片刻，刷新页面，即可看到效果\" class=\"headerlink\" title=\"4. 稍等片刻，刷新页面，即可看到效果\"></a>4. 稍等片刻，刷新页面，即可看到效果</h2><p>稍等片刻后，就可以使用新域名访问Github Pages了。</p>\n",
            "tags": [
                "Github",
                "Pages"
            ]
        },
        {
            "id": "https://xubiaolin.github.io/2025/04/11/wang-luo-ke-ji/openwrt-an-zhuang-pei-zhi-tailscale/",
            "url": "https://xubiaolin.github.io/2025/04/11/wang-luo-ke-ji/openwrt-an-zhuang-pei-zhi-tailscale/",
            "title": "OpenWrt安装配置Tailscale",
            "date_published": "2025-04-10T16:16:54.000Z",
            "content_html": "<h1 id=\"OpenWrt安装配置Tailscale\"><a href=\"#OpenWrt安装配置Tailscale\" class=\"headerlink\" title=\"OpenWrt安装配置Tailscale\"></a>OpenWrt安装配置Tailscale</h1><h2 id=\"什么是Tailscale\"><a href=\"#什么是Tailscale\" class=\"headerlink\" title=\"什么是Tailscale\"></a>什么是Tailscale</h2><p>Tailscale就是基于Wireguard的一个联网工具，无需公网地址，通过去中心化，实现各个节点之间点对点的连接.配置简单友好，支持的各类平台和客户端.</p>\n<h2 id=\"Tailscale的优势\"><a href=\"#Tailscale的优势\" class=\"headerlink\" title=\"Tailscale的优势\"></a>Tailscale的优势</h2><p>对比zerotier和wireguard,tailscale更容易连上官方的中转服务器,webui界面更简单,适合小白上手,并且可以一键更新,不需要公网ip。</p>\n<p>zerotier在没有ipv6的情况下很容易连接不上官方中转服务器导致设备掉线。</p>\n<p>wireguard需要公网ip,配置繁琐而且每次公网ip更换都需要重启wireguard接口。</p>\n<p>Tailscale Derp配置简单，可以在官方后台直接配置，而不像ZeroTier的moon，需要手动添加。</p>\n<h2 id=\"OpenWrt上的配置Tailscale\"><a href=\"#OpenWrt上的配置Tailscale\" class=\"headerlink\" title=\"OpenWrt上的配置Tailscale\"></a>OpenWrt上的配置Tailscale</h2><h3 id=\"下载软件\"><a href=\"#下载软件\" class=\"headerlink\" title=\"下载软件\"></a>下载软件</h3><p>将Tailscale软件包下载到指定目录。进入tailscale的github releases地址，找到最新的软件包，下载到本地。</p>\n<p>然后使用Winscp工具将下载的软件上传到OpenWrt的/tmp目录下，也可以找到下载链接，直接使用wget命令下载.</p>\n<p>示例命令：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">wget https://github.com/adyanth/openwrt-tailscale-enabler/releases/download/v1.60.0-e428948-autoupdate/openwrt-tailscale-enabler-v1.60.0-e428948-autoupdate.tgz</span><br><span class=\"line\"></span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"解压缩：\"><a href=\"#解压缩：\" class=\"headerlink\" title=\"解压缩：\"></a>解压缩：</h3><figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">tar x -zvC / -f openwrt-tailscale-enabler-v1.60.0-e428948-autoupdate.tgz</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h3><figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">opkg update</span><br><span class=\"line\">opkg install libustream-openssl ca-bundle kmod-tun</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"设置开机启动，验证开机启动是否成功\"><a href=\"#设置开机启动，验证开机启动是否成功\" class=\"headerlink\" title=\"设置开机启动，验证开机启动是否成功\"></a>设置开机启动，验证开机启动是否成功</h3><figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">/etc/init.d/tailscale enable</span><br><span class=\"line\">ls /etc/rc.d/S*tailscale*</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"启动tailscale\"><a href=\"#启动tailscale\" class=\"headerlink\" title=\"启动tailscale\"></a>启动tailscale</h3><figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">/etc/init.d/tailscale start</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"获取登录链接并配置路由\"><a href=\"#获取登录链接并配置路由\" class=\"headerlink\" title=\"获取登录链接并配置路由\"></a>获取登录链接并配置路由</h3><figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">tailscale up</span><br></pre></td></tr></tbody></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/0b21ac58c225cc714d757c1c74c483c4d66c7a754f25ac4a99ca69b18d7cdf21.png\" alt=\"picture 0\">  </p>\n<p>复制显示的地址，并在浏览器中打开，使用谷歌或微软帐号登录Tailscale的管理主页进行验证。<br> 不建议使用谷歌账号,因为使用谷歌后你手机在外面链接需要先开科学再登录谷歌账号才能链接上tailscale的app.</p>\n<h3 id=\"开启子网路由\"><a href=\"#开启子网路由\" class=\"headerlink\" title=\"开启子网路由\"></a>开启子网路由</h3><p>在OpenWrt上输入以下命令，打开本地子路由。子网地址是OpenWrt的lan网络。192.168.11.0/24是我的子网,不要无脑复制我的!!!!!</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">tailscale up --accept-routes --accept-dns=false --advertise-routes=192.168.11.0/24</span><br></pre></td></tr></tbody></table></figure>\n\n<p>在Tailscale的管理页面上，单击设备列表右侧的更多图标，禁用密钥过期，并打开子网路由。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/31787ab2a9a34e778f359e8e02de51a55c944f3302301fa6730c40925de43bd4.png\" alt=\"picture 1\">  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/2f7d55c9e63b03c85f3b2540a6193b8dcb26b5bbfb4a7d3ac11370cfb890cd38.png\" alt=\"picture 2\">  </p>\n<h3 id=\"添加Tailscale接口\"><a href=\"#添加Tailscale接口\" class=\"headerlink\" title=\"添加Tailscale接口\"></a>添加Tailscale接口</h3><p>现在在OpenWrt上已经可以ping通其他Tailscale节点了，但其他节点还无法连接OpenWrt节点，还需要在OpenWrt上添加Tailscale接口。</p>\n<p>在OpenWrt上新建一个接口，协议选静态地址，设备选tailscale0，地址为Taliscale管理页面上分配的地址，掩码255.0.0.0。防火墙区域选lan区域。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/1416664fad80fd03575313b0f994b6c259c7efe4b0225ca49c01d2b2401810fd.png\" alt=\"picture 3\">  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/afc88d82a37faa58fbc0bb1091e62153a9935a7a436f1cc790e2b7742bd568c2.png\" alt=\"picture 4\">  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/3192a5a1f18db4ba4bebaf5d867780a31b1906f67ebc4c5f50bc7cff43e18b50.png\" alt=\"picture 5\">  </p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>在另一个设备访问<a href=\"http://192.168.11.1/\">http://192.168.11.1</a> ，如果可以访问，则说明配置成功。<br>ps：这里的192.168.11.1是我的OpenWrt的ip地址，不要无脑复制我的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/b6b396b92783834191aab87cd5c7c8eb612f5429b209fee24b8ec9f8cf21387e.png\" alt=\"picture 6\">  </p>\n",
            "tags": [
                "组网",
                "OpenWrt",
                "Tailscale"
            ]
        },
        {
            "id": "https://xubiaolin.github.io/2025/04/11/wang-luo-ke-ji/docker-yi-jian-bu-shu-zerotier-planet/",
            "url": "https://xubiaolin.github.io/2025/04/11/wang-luo-ke-ji/docker-yi-jian-bu-shu-zerotier-planet/",
            "title": "Docker一键部署ZeroTier Planet",
            "date_published": "2025-04-10T16:00:17.000Z",
            "content_html": "<h1 id=\"Docker一键部署ZeroTier-Planet\"><a href=\"#Docker一键部署ZeroTier-Planet\" class=\"headerlink\" title=\"Docker一键部署ZeroTier Planet\"></a>Docker一键部署ZeroTier Planet</h1><p>项目地址：<a href=\"https://github.com/xubiaolin/docker-zerotier-planet\">https://github.com/xubiaolin/docker-zerotier-planet</a></p>\n<h2 id=\"ZeroTier-是什么？\"><a href=\"#ZeroTier-是什么？\" class=\"headerlink\" title=\"ZeroTier 是什么？\"></a>ZeroTier 是什么？</h2><p>ZeroTier 是一款强大的 P2P VPN 工具，它能让你在互联网上搭建属于自己的虚拟局域网。通过它，你可以轻松实现远程访问家中设备的需求 - 比如在公司用手机直接访问家里的 NAS。最重要的是，设备之间是点对点直连的，无需经过中转服务器，既保证了速度，又提升了安全性。</p>\n<p>它的工作原理是这样的：通过 ZeroTier One 客户端，在不同设备（如笔记本、手机、服务器等）之间建立 P2P 连接，即使这些设备都在 NAT 后面也没问题。它使用了 STUN 等技术，可以穿透大多数类型的 NAT，实现设备间的直接通信。如果实在无法直连，才会通过中转服务器进行通信。</p>\n<p>简单来说，ZeroTier 就像是一个跨越互联网的”虚拟交换机”，让分布在世界各地的设备，都能像在同一个局域网内一样方便地相互访问。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/a8b1984dedd743645dec2960a36280a643b6757662f1e34d07f2b48156afb7ca.png\" alt=\"picture 0\">  </p>\n<p>ZeroTier 网络中的关键概念</p>\n<p><code>PLANET（行星服务器）</code>：ZeroTier 网络的核心根服务器，负责网络发现和初始连接。相当于整个网络的”中枢”。</p>\n<p><code>MOON（卫星服务器）</code>：用户可以自建的私有根服务器。它可以作为区域性的代理节点,帮助就近的设备更快地建立连接,提升网络性能。</p>\n<p><code>LEAF（叶子节点）</code>：所有接入 ZeroTier 网络的终端设备,如电脑、手机、服务器等。这些设备通过 PLANET 和 MOON 的协调来相互发现和通信。</p>\n<p>本教程将指导您搭建一个私有的 PLANET 服务器,让您完全掌控自己的 ZeroTier 网络。</p>\n<h2 id=\"为什么要自建PLANET-服务器？\"><a href=\"#为什么要自建PLANET-服务器？\" class=\"headerlink\" title=\"为什么要自建PLANET 服务器？\"></a>为什么要自建PLANET 服务器？</h2><p>自建 PLANET 服务器有以下几个重要原因：</p>\n<p>提升网络稳定性：官方服务器位于海外，国内用户访问延迟高且不稳定。自建服务器可以大幅提升连接质量。</p>\n<p>加快连接速度：本地化的 PLANET 服务器可以更快地帮助设备建立 P2P 连接。</p>\n<p>增强网络控制：自建服务器让您完全掌控网络配置，可以根据需求进行优化调整。</p>\n<p>提高安全性：私有化部署意味着网络流量不经过第三方服务器，更加安全可靠。</p>\n<p>降低依赖：避免因官方服务器故障或网络波动影响您的业务正常运行。</p>\n<h2 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h2><p>在开始安装之前，请确保您的服务器满足以下条件:</p>\n<ul>\n<li><p>服务器要求:</p>\n<ul>\n<li>拥有公网IP地址</li>\n<li>需开放以下端口:<ul>\n<li>3443/tcp (管理面板，根据实际情况调整)</li>\n<li>9994/tcp (ZeroTier通信，根据实际情况调整)</li>\n<li>9994/udp (ZeroTier通信，根据实际情况调整)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>软件依赖:</p>\n<ul>\n<li>Docker (容器运行环境)</li>\n<li>Git (获取项目代码)</li>\n</ul>\n</li>\n<li><p>系统要求:</p>\n<ul>\n<li>推荐使用较新的Linux发行版:<ul>\n<li>Debian 12</li>\n<li>Ubuntu 20.04+</li>\n<li>Rocky Linux</li>\n<li>其他同类系统</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#debian/ubuntu等</span></span><br><span class=\"line\">apt update &amp;&amp; apt install git -y </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#centos等</span></span><br><span class=\"line\">yum update &amp;&amp; yum install git -y </span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://get.docker.com |bash </span><br></pre></td></tr></tbody></table></figure>\n\n<p>如果网络问题，导致无法安装，可以使用国内镜像安装：<br>请参考：<a href=\"https://help.aliyun.com/zh/ecs/use-cases/install-and-use-docker#33f11a5f1800n\">安装Docker</a></p>\n<h3 id=\"启动docker\"><a href=\"#启动docker\" class=\"headerlink\" title=\"启动docker\"></a>启动docker</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">service docker start</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"配置docker加速镜像（可选，不配也可以）\"><a href=\"#配置docker加速镜像（可选，不配也可以）\" class=\"headerlink\" title=\"配置docker加速镜像（可选，不配也可以）\"></a>配置docker加速镜像（可选，不配也可以）</h3><figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class=\"line\">{</span><br><span class=\"line\">    \"registry-mirrors\": [</span><br><span class=\"line\">        \"https://docker.mirrors.aster.edu.pl\",</span><br><span class=\"line\">        \"https://docker.mirrors.imoyuapp.win\"</span><br><span class=\"line\">    ]</span><br><span class=\"line\">}</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"下载项目源码\"><a href=\"#下载项目源码\" class=\"headerlink\" title=\"下载项目源码\"></a>下载项目源码</h2><p>官方地址</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/xubiaolin/docker-zerotier-planet.git</span><br></pre></td></tr></tbody></table></figure>\n\n<p>加速地址</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">git clone https://ghproxy.imoyuapp.win/https://github.com/xubiaolin/docker-zerotier-planet.git</span><br></pre></td></tr></tbody></table></figure>\n\n<h2 id=\"执行安装脚本\"><a href=\"#执行安装脚本\" class=\"headerlink\" title=\"执行安装脚本\"></a>执行安装脚本</h2><p>进入项目目录</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">cd docker-zerotier-planet</span><br></pre></td></tr></tbody></table></figure>\n\n<p>运行 <code>deploy.sh</code> 脚本</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">./deploy.sh</span><br></pre></td></tr></tbody></table></figure>\n\n<p>根据提示来选择即可，操作完成后会自动部署</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">欢迎使用zerotier-planet脚本，请选择需要执行的操作：</span><br><span class=\"line\">1. 安装</span><br><span class=\"line\">2. 卸载</span><br><span class=\"line\">3. 更新</span><br><span class=\"line\">4. 查看信息</span><br><span class=\"line\">5. 退出</span><br><span class=\"line\">请输入数字：</span><br></pre></td></tr></tbody></table></figure>\n\n<p>整个脚本预计需要 1-3 分钟,具体需要看网络与机型</p>\n<p>当您看到类似如下字样时，表示安装成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/9eac63511ade6f756744837c31f8fe3a1b84b817897181f332c90ef713f3cc82.png\" alt=\"安装成功\">  </p>\n<h2 id=\"下载-planet-文件\"><a href=\"#下载-planet-文件\" class=\"headerlink\" title=\"下载 planet 文件\"></a>下载 <code>planet</code> 文件</h2><p>脚本运行完成后，会在 <code>./data/zerotier/dist</code> 目录下生成 <code>planet</code> 和 <code>moon</code> 配置文件。</p>\n<p>您可以通过以下两种方式获取这些文件:</p>\n<ol>\n<li>通过安装完成后提供的URL直接下载</li>\n<li>使用scp或其他文件传输工具从服务器下载</li>\n</ol>\n<p>请妥善保存这些文件,后续配置客户端时会用到。</p>\n<h2 id=\"新建网络\"><a href=\"#新建网络\" class=\"headerlink\" title=\"新建网络\"></a>新建网络</h2><p>访问 <code>http://ip:3443</code> 进入controller页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/e0fd7a3625ac3c5cfb756bc40f5c28d6cb8aa7299d684988e00f775f88bfa4f7.png\" alt=\"ztncui ui\">  </p>\n<p>使用默认账号为:<code>admin</code></p>\n<p>默认密码为:<code>password</code></p>\n<h3 id=\"创建网络\"><a href=\"#创建网络\" class=\"headerlink\" title=\"创建网络\"></a>创建网络</h3><p>登录后点击”Networks”菜单，然后点击”Add Network”按钮创建新网络。</p>\n<p>在创建网络页面中，输入一个便于识别的网络名称，其他选项可保持默认。点击”Create Network”按钮完成创建。</p>\n<p>创建成功后系统会自动生成一个网络ID，这个ID在后续客户端配置时会用到，请记录下来。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/fb2e94b5663fc9c8f3b38b93bf267e37f4c5287664afb6b0e29fb4fd3fd92220.png\" alt=\"picture 3\">  </p>\n<p>得到网络 <code>id</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/35ac24e8949cee70b2cb6336e7b176ad0f7be3b66fcd9421f5ff21e3da8fe6d6.png\" alt=\"picture 4\">  </p>\n<h3 id=\"分配网络IP\"><a href=\"#分配网络IP\" class=\"headerlink\" title=\"分配网络IP:\"></a>分配网络IP:</h3><p>选中easy setup<br><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/19a83a96f3277816715d25aa3c071fd2e57103cac4171ce7512f29204e8d238a.png\" alt=\"picture 5\">  </p>\n<p>生成ip范围<br><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/8aef706675f9bdad7c388b250a6473c04744332ed4a7b60903a682fbf899c55e.png\" alt=\"picture 6\">  </p>\n<h1 id=\"客户端配置\"><a href=\"#客户端配置\" class=\"headerlink\" title=\"客户端配置\"></a>客户端配置</h1><p>ZeroTier 支持多种主流操作系统的客户端，包括:</p>\n<ul>\n<li>Windows</li>\n<li>macOS </li>\n<li>Linux</li>\n<li>Android</li>\n</ul>\n<h2 id=\"Windows-配置\"><a href=\"#Windows-配置\" class=\"headerlink\" title=\"Windows 配置\"></a>Windows 配置</h2><p>首先去zerotier官网下载一个zerotier客户端</p>\n<p>将 <code>planet</code> 文件覆盖粘贴到<code>C:\\ProgramData\\ZeroTier\\One</code>中(这个目录是个隐藏目录，需要运允许查看隐藏目录才行)</p>\n<p>Win+S 搜索 <code>服务</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/67996a85a5f24931a2d1df96e36c9fce71cc9ea2656ab1dd82af38ed50bbb6c4.png\" alt=\"picture 7\">  </p>\n<p>找到ZeroTier One，并且重启服务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/1aa7d4f54b046c6c3753d1f2c684168c0e28a84913231ccdbe456a921e74d702.png\" alt=\"picture 8\">  </p>\n<h3 id=\"加入网络\"><a href=\"#加入网络\" class=\"headerlink\" title=\"加入网络\"></a>加入网络</h3><p>使用管理员身份打开PowerShell</p>\n<p>执行如下命令，看到join ok字样就成功了</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">PS C:\\Windows\\system32&gt; zerotier-cli.bat join 网络id(就是在网页里面创建的那个网络)</span><br><span class=\"line\">200 join OK</span><br><span class=\"line\">PS C:\\Windows\\system32&gt;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>登录管理后台可以看到有个个新的客户端，勾选<code>Authorized</code>就行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/75b1b0b269cb514613a5fe47f6e9e0fbc050009d7d70540ac4ac970eaaf312d0.png\" alt=\"![ui](assets/join_net.png) 1\">  </p>\n<p>IP assignment 里面会出现zerotier的内网ip</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/xubiaolin/picgo@master/abd65d858a86b307448454898952261690e75ac44ec2dcbff790d1dd1d7b024e.png\" alt=\"picture 10\">  </p>\n<p>执行如下命令：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">PS C:\\Windows\\system32&gt; zerotier-cli.bat peers</span><br><span class=\"line\">200 peers</span><br><span class=\"line\">&lt;ztaddr&gt;   &lt;ver&gt;  &lt;role&gt; &lt;lat&gt; &lt;link&gt; &lt;lastTX&gt; &lt;lastRX&gt; &lt;path&gt;</span><br><span class=\"line\">fcbaeb9b6c 1.8.7  PLANET    52 DIRECT 16       8994     1.1.1.1/9993</span><br><span class=\"line\">fe92971aad 1.8.7  LEAF      14 DIRECT -1       4150     2.2.2.2/9993</span><br><span class=\"line\">PS C:\\Windows\\system32&gt;</span><br></pre></td></tr></tbody></table></figure>\n<p>可以看到有一个 PLANTET 和 LEAF 角色，连接方式均为 DIRECT(直连)</p>\n<p>到这里就加入网络成功了</p>\n<h2 id=\"Linux-客户端\"><a href=\"#Linux-客户端\" class=\"headerlink\" title=\"Linux 客户端\"></a>Linux 客户端</h2><p>步骤如下：</p>\n<ol>\n<li>安装linux客户端软件</li>\n<li>进入目录 <code>/var/lib/zerotier-one</code></li>\n<li>替换目录下的 <code>planet</code> 文件</li>\n<li>重启 <code>zerotier-one</code> 服务(<code>service zerotier-one restart</code>)</li>\n<li>加入网络 <code>zerotier-cli join</code> 网络 <code>id</code></li>\n<li>管理后台同意加入请求</li>\n<li><code>zerotier-cli peers</code> 可以看到<code> planet</code> 角色</li>\n</ol>\n<h2 id=\"安卓客户端配置\"><a href=\"#安卓客户端配置\" class=\"headerlink\" title=\"安卓客户端配置\"></a>安卓客户端配置</h2><p><a href=\"https://github.com/kaaass/ZerotierFix\">Zerotier 非官方安卓客户端</a></p>\n<h2 id=\"MacOS-客户端配置\"><a href=\"#MacOS-客户端配置\" class=\"headerlink\" title=\"MacOS 客户端配置\"></a>MacOS 客户端配置</h2><p>步骤如下：</p>\n<ol>\n<li>进入 <code>/Library/Application\\ Support/ZeroTier/One/</code> 目录，并替换目录下的 <code>planet</code> 文件</li>\n<li>重启 ZeroTier-One：<code>cat /Library/Application\\ Support/ZeroTier/One/zerotier-one.pid | sudo xargs kill</code></li>\n<li>加入网络 <code>zerotier-cli join</code> 网络 <code>id</code></li>\n<li>管理后台同意加入请求</li>\n<li><code>zerotier-cli peers</code> 可以看到<code> planet</code> 角色</li>\n</ol>\n<h2 id=\"OpenWRT-客户端配置\"><a href=\"#OpenWRT-客户端配置\" class=\"headerlink\" title=\"OpenWRT 客户端配置\"></a>OpenWRT 客户端配置</h2><p>步骤如下：</p>\n<ol>\n<li>安装zerotier客户端</li>\n<li>进入目录 <code>/etc/config/zero/planet</code></li>\n<li>替换目录下的 <code>planet</code> 文件</li>\n<li>在openwrt网页后台先关闭zerotier服务，在开启zerotier服务</li>\n<li>在openwrt网页后台加入网络</li>\n<li>管理后台同意加入请求</li>\n<li>执行 <code>ln -s /etc/config/zero /var/lib/zerotier-one </code></li>\n<li><code>zerotier-cli peers</code> 可以看到<code> planet</code> 角色</li>\n</ol>\n<h2 id=\"iOS-客户端配置\"><a href=\"#iOS-客户端配置\" class=\"headerlink\" title=\"iOS 客户端配置\"></a>iOS 客户端配置</h2><p>方案一：<br>越狱后安装ZeroTie，然后替换<code>planet</code>文件</p>\n<p>方案二：<br>使用Wireguard接入到ZeroTier网络</p>\n<h1 id=\"管理面板SSL配置\"><a href=\"#管理面板SSL配置\" class=\"headerlink\" title=\"管理面板SSL配置\"></a>管理面板SSL配置</h1><p>管理面板的SSL支持需要自行配置，参考Nginx配置如下：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">upstream zerotier {</span><br><span class=\"line\">  server 127.0.0.1:3443;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">server {</span><br><span class=\"line\"></span><br><span class=\"line\">  listen 443 ssl;</span><br><span class=\"line\"></span><br><span class=\"line\">  server_name {CUSTOME_DOMAIN}; #替换自己的域名</span><br><span class=\"line\"></span><br><span class=\"line\">  # ssl证书地址</span><br><span class=\"line\">  ssl_certificate    pem和或者crt文件的路径;</span><br><span class=\"line\">  ssl_certificate_key key文件的路径;</span><br><span class=\"line\"></span><br><span class=\"line\">  # ssl验证相关配置</span><br><span class=\"line\">  ssl_session_timeout  5m;    #缓存有效期</span><br><span class=\"line\">  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;    #加密算法</span><br><span class=\"line\">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    #安全链接可选的加密协议</span><br><span class=\"line\">  ssl_prefer_server_ciphers on;   #使用服务器端的首选算法</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  location / {</span><br><span class=\"line\">    proxy_pass http://zerotier;</span><br><span class=\"line\">    proxy_set_header HOST $host;</span><br><span class=\"line\">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">server {</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    server_name  {CUSTOME_DOMAIN}; #替换自己的域名</span><br><span class=\"line\">    return 301 https://$server_name$request_uri;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n\n<h1 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h1><figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">rm</span> -f zerotier-planet</span><br></pre></td></tr></tbody></table></figure>\n\n<h1 id=\"Q-A：\"><a href=\"#Q-A：\" class=\"headerlink\" title=\"Q&amp;A：\"></a>Q&amp;A：</h1><h2 id=\"1-为什么我ping不通目标机器？\"><a href=\"#1-为什么我ping不通目标机器？\" class=\"headerlink\" title=\"1. 为什么我ping不通目标机器？\"></a>1. 为什么我ping不通目标机器？</h2><p>请检查防火墙设置，<code>Windows</code> 系统需要允许 <code>ICMP</code> 入站，<code>Linux</code> 同理</p>\n<h2 id=\"2-IOS客户端怎么用？\"><a href=\"#2-IOS客户端怎么用？\" class=\"headerlink\" title=\"2. IOS客户端怎么用？\"></a>2. IOS客户端怎么用？</h2><p>iOS 客户端插件在这里，设备需要越狱： <a href=\"https://github.com/lemon4ex/ZeroTieriOSFix\">https://github.com/lemon4ex/ZeroTieriOSFix</a></p>\n<h2 id=\"3-为什么看不到官方的Planet\"><a href=\"#3-为什么看不到官方的Planet\" class=\"headerlink\" title=\"3. 为什么看不到官方的Planet\"></a>3. 为什么看不到官方的Planet</h2><p>该项目剔除了官方服务器，只保留了自定义的Planet节点</p>\n<h2 id=\"4-我更换了IP需要怎么处理？\"><a href=\"#4-我更换了IP需要怎么处理？\" class=\"headerlink\" title=\"4. 我更换了IP需要怎么处理？\"></a>4. 我更换了IP需要怎么处理？</h2><p>如果IP更换了，则需要重新部署，相当于全新部署</p>\n<h2 id=\"5-PVE-lxc-容器没有创建网卡\"><a href=\"#5-PVE-lxc-容器没有创建网卡\" class=\"headerlink\" title=\"5. PVE lxc 容器没有创建网卡\"></a>5. PVE lxc 容器没有创建网卡</h2><p>需要修改lxc容器的配置，同时lxc容器需要取消勾选<code>无特权</code></p>\n<p>配置文件位置在<code>/etc/pve/lxc/{ID}.conf</code></p>\n<p>在Proxmox7.0之前的版本添加以下内容：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">lxc.cgroup.devices.allow: c 10:200 rwm</span><br><span class=\"line\">lxc.mount.entry: /dev/net/tun dev/net/tun none bind,create=file</span><br></pre></td></tr></tbody></table></figure>\n<p>在Proxmox7.0之后的版本添加以下内容：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">lxc.cgroup2.devices.allow: c 10:200 rwm</span><br><span class=\"line\">lxc.mount.entry: /dev/net/tun dev/net/tun none bind,create=file</span><br></pre></td></tr></tbody></table></figure>\n\n<h2 id=\"6-管理后台忘记密码怎么办：\"><a href=\"#6-管理后台忘记密码怎么办：\" class=\"headerlink\" title=\"6. 管理后台忘记密码怎么办：\"></a>6. 管理后台忘记密码怎么办：</h2><p>执行<code>./deploy.sh</code>，选择重置密码即可</p>\n<h2 id=\"7-为什么连不上planet\"><a href=\"#7-为什么连不上planet\" class=\"headerlink\" title=\"7. 为什么连不上planet\"></a>7. 为什么连不上planet</h2><p>请检查防火墙，如果是阿里云、腾讯云用户，需要在对应平台后台防火墙放行端口。linux机器上也要放行，如果安装了ufw等防火墙工具。</p>\n<h2 id=\"8-如何判断是直连还是中转\"><a href=\"#8-如何判断是直连还是中转\" class=\"headerlink\" title=\"8. 如何判断是直连还是中转\"></a>8. 如何判断是直连还是中转</h2><p>管理员权限执行终端，运行<code>zerotier-cli peers</code></p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">&lt;ztaddr&gt;   &lt;ver&gt;  &lt;role&gt; &lt;lat&gt; &lt;link&gt;   &lt;lastTX&gt; &lt;lastRX&gt; &lt;path&gt;</span><br><span class=\"line\">69c0d507d0 -      LEAF      -1 RELAY</span><br><span class=\"line\">93caa675b0 1.12.2 PLANET  -894 DIRECT   4142     4068     110.42.99.46/9994</span><br><span class=\"line\">ab403e2074 1.10.2 LEAF      -1 RELAY</span><br></pre></td></tr></tbody></table></figure>\n<p>如果你的ztaddr是REPLAY, 就说明是中转</p>\n<h2 id=\"9-为什么我的zerotier传输不稳定\"><a href=\"#9-为什么我的zerotier传输不稳定\" class=\"headerlink\" title=\"9. 为什么我的zerotier传输不稳定\"></a>9. 为什么我的zerotier传输不稳定</h2><p>由于zerotier使用的是udp协议，部分地区可能对udp进行了qos, 可以考虑使用openvpn。</p>\n<h2 id=\"10-支持域名吗？\"><a href=\"#10-支持域名吗？\" class=\"headerlink\" title=\"10.支持域名吗？\"></a>10.支持域名吗？</h2><p>暂不支持</p>\n<h2 id=\"11-ARM服务器可以搭建吗\"><a href=\"#11-ARM服务器可以搭建吗\" class=\"headerlink\" title=\"11. ARM服务器可以搭建吗\"></a>11. ARM服务器可以搭建吗</h2><p>可以</p>\n<h2 id=\"12-支持docker-compose启动部署吗\"><a href=\"#12-支持docker-compose启动部署吗\" class=\"headerlink\" title=\"12. 支持docker-compose启动部署吗\"></a>12. 支持docker-compose启动部署吗</h2><p>参考docker-compose文件如下</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">version: '3'</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  myztplanet:</span><br><span class=\"line\">    image: xubiaolin/zerotier-planet:latest</span><br><span class=\"line\">    container_name: ztplanet</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 9994:9994</span><br><span class=\"line\">      - 9994:9994/udp</span><br><span class=\"line\">      - 3443:3443</span><br><span class=\"line\">      - 3000:3000</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - IP_ADDR4=[IPV4IP ADDRESS]</span><br><span class=\"line\">      - IP_ADDR6=</span><br><span class=\"line\">      - ZT_PORT=9994</span><br><span class=\"line\">      - API_PORT=3443</span><br><span class=\"line\">      - FILE_SERVER_PORT=3000</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./data/zerotier/dist:/app/dist</span><br><span class=\"line\">      - ./data/zerotier/ztncui:/app/ztncui</span><br><span class=\"line\">      - ./data/zerotier/one:/var/lib/zerotier-one</span><br><span class=\"line\">      - ./data/zerotier/config:/app/config</span><br><span class=\"line\">    restart: unless-stopped</span><br><span class=\"line\"></span><br></pre></td></tr></tbody></table></figure>\n\n",
            "tags": [
                "ZeroTier",
                "组网"
            ]
        }
    ]
}